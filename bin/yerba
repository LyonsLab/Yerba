#!/usr/bin/env python
import itertools
import time

import zmq

_defaults = {
    'connection' : 'tcp://localhost:5151',
    'max_attempts' : 30,
    'timeout' : 1000
}

def main():
    context = zmq.Context()
    socket = context.socket(zmq.REQ)
    socket.setsockopt(zmq.LINGER, 0)
    socket.connect(_defaults['connection'])

    request = {
        'request' : 'health',
        'data' : { }
    }

    poller = zmq.Poller()
    poller.register(socket, zmq.POLLIN)
    counter = itertools.count()
    count = counter.next()

    socket.send_json(request, zmq.NOBLOCK)

    result = None

    while _defaults['max_attempts'] > counter.next() and not result:
        time.sleep(1)

        if socket in dict(poller.poll(timeout=_defaults['timeout'])):
            result = socket.recv_json(flags=zmq.NOBLOCK)
        else:
            try:
                socket.send_json(request, zmq.NOBLOCK)
            except zmq.ZMQError:
                pass

    if not result:
        print("Unable to connect to the job engine.")

    socket.close()
    context.term()

if __name__ == '__main__':
    main()
