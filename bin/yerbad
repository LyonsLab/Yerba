#!/usr/bin/env python
import argparse
import ConfigParser as configparser
import logging
import logging.handlers as loghandlers
import os
import sys

sys.path.insert(0, os.path.abspath('..'))
from yerba import (yerba, utils)

_path = os.path.dirname(__file__)
_defaults = {
    'port' : 5151,
    'logging' : os.path.join(_path, 'logging.conf'),
    'logfile' : os.path.join(_path, 'yerba.log'),
    'loglevel' : 'WARN',
    'queue_prefix' : 'yerba'
}

def main(args=None):
    config = configparser.ConfigParser()

    if args:
        options = utils.ChainMap(args, _defaults)
    else:
        options = utils.ChainMap(_defaults)

    # Setup Logging
    if os.path.exists(options['logging']):
        logging.config.fileConfig("logging.conf")
        logger = logging.getLogger('yerba')
    else:
        logger = logging.getLogger('yerba')
        logger.setLevel(options['loglevel'])

        fmt = logging.Formatter(
            '%(asctime)s %(name)s [%(levelname)s] %(message)s',
             datefmt='%m/%d/%Y %I:%M:%S')

        filehandler = loghandlers.TimedRotatingFileHandler(
                options['logfile'], 'midnight')

        filehandler.setLevel(logging.DEBUG)
        filehandler.setFormatter(fmt)

        streamhandler = logging.StreamHandler()
        streamhandler.setLevel(logging.INFO)
        streamhandler.setFormatter(fmt)

        logger.addHandler(filehandler)
        logger.addHandler(streamhandler)

    logger.setLevel(getattr(logging, options['loglevel'].upper(), None))
    yerba.listen_forever(port = options['port'], options = options)

if __name__ == "__main__":
    parser = argparse.ArgumentParser(
        description='Processes bioinformatic jobs.')
    parser.add_argument('--port')
    parser.add_argument('--loglevel')
    parser.add_argument('--logging')
    parser.add_argument('--queue-prefix')

    main(args = {k:v for k, v in vars(parser.parse_args()).items() if v})
