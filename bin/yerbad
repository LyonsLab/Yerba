#!/usr/bin/python
import argparse
import ConfigParser as configparser
import logging
import logging.handlers as loghandlers
import os
import sys

sys.path.insert(0, os.path.abspath('..'))
from yerba import (yerba, utils)

_defaults = {
    'port' : 5151,
    'level' : 'CRITICAL',
    'logging' : 'logging.conf',
    'queue-prefix' : 'yerba'
}

# Setup Logging
if os.path.exists("logging.conf"):
   logging.config.fileConfig("logging.conf")
   logger = logging.getLogger('main')
else:
    logger = logging.getLogger('main')
    logger.setLevel(logging.DEBUG)

    fmt = logging.Formatter('%(asctime)s %(name)s [%(levelname)s] %(message)s',
                            datefmt='%m/%d/%Y %I:%M:%S')

    filehandler = loghandlers.TimedRotatingFileHandler('yerba.log', 'midnight')
    filehandler.setLevel(logging.DEBUG)
    filehandler.setFormatter(fmt)

    streamhandler = logging.StreamHandler()
    streamhandler.setLevel(logging.INFO)
    streamhandler.setFormatter(fmt)

    logger.addHandler(filehandler)
    logger.addHandler(streamhandler)

if __name__ == "__main__":
    parser = argparse.ArgumentParser(
        description='Processes bioinformatic jobs.')

    parser.add_argument('--port')
    parser.add_argument('--level')
    parser.add_argument('--logging')
    parser.add_argument('--queue-prefix')
    namespace = parser.parse_args()

    config = configparser.ConfigParser()
    arguments = {k:v for k, v in vars(namespace).items() if v}
    options = utils.ChainMap(arguments, _defaults)

    logger.setLevel(getattr(logging, options['level'].upper(), None))
    yerba.listen_forever(port = options['port'], options = options)
