#!/usr/bin/env python
import argparse
import logging
import os
import sys
import signal
from ConfigParser import RawConfigParser, NoSectionError
from logging.config import fileConfig
from logging.handlers import TimedRotatingFileHandler

SCRIPT_PATH = os.path.dirname(__file__)
sys.path.insert(0, os.path.abspath(os.path.join(SCRIPT_PATH, '..')))
sys.path.insert(0, "/usr/local/lib/python2.7/site-packages")

from yerba.base import listen_forever
from yerba.db import setup

DEFAULTS = {
    'port' : 5151,
    'log' : os.path.join(SCRIPT_PATH, 'yerba.log'),
    'access' : os.path.join(SCRIPT_PATH, 'yerba.access.log'),
    'level' : 'WARN',
    'debug' : True
}

CONFIG_PATHS = [
    '/etc/yerba/yerba.cfg',
    os.path.abspath(os.path.join(SCRIPT_PATH, '../yerba.cfg')),
]


def setup_logger(cfg, name):
    # Setup Logging
    try:
        logging_conf = cfg.get("%s-log" % name, 'logging')
        fileConfig(logging_conf)
        logger = logging.getLogger(name)
    except NoSectionError:
        logger = logging.getLogger(name)
        format_string = ('%(asctime)s %(name)s:%(lineno)s'
            '[%(levelname)s] %(message)s')

        fmt = logging.Formatter(format_string, datefmt='%m/%d/%Y %I:%M:%S')

        filehandler = TimedRotatingFileHandler(cfg.get('yerba', "%s-log" % name),
                                               'midnight')

        filehandler.setLevel(logging.DEBUG)
        filehandler.setFormatter(fmt)

        streamhandler = logging.StreamHandler()
        streamhandler.setLevel(logging.DEBUG)
        streamhandler.setFormatter(fmt)

        logger.addHandler(streamhandler)
        logger.addHandler(filehandler)

    logger.setLevel(getattr(logging, cfg.get('yerba', 'level').upper(), None))

def signal_handler(signal, frame):
    print('!!!! Captured Ctrl+C, exiting gracefully ...')
    sys.exit(0);

def main(args=None):
    # Setup signal handler
    signal.signal(signal.SIGINT, signal_handler)

    cfg = RawConfigParser(DEFAULTS)

    try:
        CONFIG_PATHS.append(args['config'])
    except KeyError:
        pass
    finally:
        cfg.read(CONFIG_PATHS)

    #: Setup access log
    setup_logger(cfg, 'access')

    #: Setup yerba log
    setup_logger(cfg, 'yerba')

    # Setup database and exit
    if args.get('setup', False):
        file_path = cfg.get('db', 'path')
        index = cfg.get('db', 'start_index')
        setup(file_path, index)
        sys.exit(0)

    listen_forever(cfg)

if __name__ == "__main__":
    parser = argparse.ArgumentParser(
        description='Processes bioinformatic jobs.')
    parser.add_argument('--port')
    parser.add_argument('--loglevel')
    parser.add_argument('--logging')
    parser.add_argument('--queue-prefix')
    parser.add_argument('--config')
    parser.add_argument('--setup', action='store_true')

    main(args = {k:v for k, v in vars(parser.parse_args()).items() if v})
